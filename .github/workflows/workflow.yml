name: Sploinkyboink CI
run-name: ${{ github.actor }} pushed, testing.

on:
  push:
    branches:
      - master

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [frontend, backend]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Docker Buildx for caching
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Backend-specific steps
      - name: Set up JDK for backend
        if: matrix.service == 'backend'
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache Gradle packages
        if: matrix.service == 'backend'
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        if: matrix.service == 'backend'
        run: chmod +x ./gradlew

      - name: Build backend with Gradle
        if: matrix.service == 'backend'
        run: ./gradlew clean build

      - name: Run backend tests with detailed logging
        if: matrix.service == 'backend'
        run: ./gradlew test --info --stacktrace

      # Frontend-specific steps
      - name: Set up Node.js for frontend
        if: matrix.service == 'frontend'
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install frontend dependencies
        if: matrix.service == 'frontend'
        run: npm install --prefix ./frontend

      - name: Build frontend
        if: matrix.service == 'frontend'
        run: npm run build --prefix ./frontend

      # Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build and push backend Docker image
      - name: Build and push backend Docker image
        if: matrix.service == 'backend'
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ github.repository }}-backend:latest
            ghcr.io/${{ github.repository_owner }}/${{ github.repository }}-backend:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Build and push frontend Docker image
      - name: Build and push frontend Docker image
        if: matrix.service == 'frontend'
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ github.repository }}-frontend:latest
            ghcr.io/${{ github.repository_owner }}/${{ github.repository }}-frontend:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
